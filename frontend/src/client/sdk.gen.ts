// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from './client';
import type { LoginApiV1UserLoginPostData, LoginApiV1UserLoginPostResponses, LoginApiV1UserLoginPostErrors, LogoutApiV1UserLogoutGetData, LogoutApiV1UserLogoutGetResponses, DeleteApiV1UserDeleteData, DeleteApiV1UserDeleteResponses, DeleteApiV1UserDeleteErrors, InfoApiV1UserGetData, InfoApiV1UserGetResponses, InfoApiV1UserGetErrors, UpdateApiV1UserPatchData, UpdateApiV1UserPatchResponses, UpdateApiV1UserPatchErrors, RegisterApiV1UserRegisterPostData, RegisterApiV1UserRegisterPostResponses, RegisterApiV1UserRegisterPostErrors, ChangePasswordApiV1UserPasswordPatchData, ChangePasswordApiV1UserPasswordPatchResponses, ChangePasswordApiV1UserPasswordPatchErrors, AllUsersApiV1UserAllGetData, AllUsersApiV1UserAllGetResponses, DeleteInviteApiV1UserInviteDeleteData, DeleteInviteApiV1UserInviteDeleteResponses, DeleteInviteApiV1UserInviteDeleteErrors, GetInvitesApiV1UserInviteGetData, GetInvitesApiV1UserInviteGetResponses, CreateInviteApiV1UserInvitePostData, CreateInviteApiV1UserInvitePostResponses, CreateInviteApiV1UserInvitePostErrors, CreateApiV1ExtensionPostData, CreateApiV1ExtensionPostResponses, CreateApiV1ExtensionPostErrors, DeleteApiV1ExtensionExtensionDeleteData, DeleteApiV1ExtensionExtensionDeleteResponses, DeleteApiV1ExtensionExtensionDeleteErrors, UpdateApiV1ExtensionExtensionPatchData, UpdateApiV1ExtensionExtensionPatchResponses, UpdateApiV1ExtensionExtensionPatchErrors, GetApiV1ExtensionInfoExtensionGetData, GetApiV1ExtensionInfoExtensionGetResponses, GetApiV1ExtensionInfoExtensionGetErrors, GetOwnApiV1ExtensionOwnGetData, GetOwnApiV1ExtensionOwnGetResponses, PhonebookApiV1ExtensionPhonebookGetData, PhonebookApiV1ExtensionPhonebookGetResponses, PhonebookApiV1ExtensionPhonebookGetErrors, AdminPhonebookApiV1ExtensionAllGetData, AdminPhonebookApiV1ExtensionAllGetResponses, AdminPhonebookApiV1ExtensionAllGetErrors, GetExtensionsOnlineApiV1ExtensionOnlineGetData, GetExtensionsOnlineApiV1ExtensionOnlineGetResponses, IsExtensionOnlineApiV1ExtensionIsOnlineExtensionGetData, IsExtensionOnlineApiV1ExtensionIsOnlineExtensionGetResponses, IsExtensionOnlineApiV1ExtensionIsOnlineExtensionGetErrors, GetExtensionContactApiV1ExtensionContactExtensionGetData, GetExtensionContactApiV1ExtensionContactExtensionGetResponses, GetExtensionContactApiV1ExtensionContactExtensionGetErrors, GetSettingsApiV1SettingsGetData, GetSettingsApiV1SettingsGetResponses, GetPhoneTypesApiV1TelephoningTypesGetData, GetPhoneTypesApiV1TelephoningTypesGetResponses, DeleteWebsipApiV1TelephoningWebsipDeleteData, DeleteWebsipApiV1TelephoningWebsipDeleteResponses, DeleteWebsipApiV1TelephoningWebsipDeleteErrors, CreateWebsipApiV1TelephoningWebsipGetData, CreateWebsipApiV1TelephoningWebsipGetResponses, PutWebsipApiV1TelephoningWebsipPutData, PutWebsipApiV1TelephoningWebsipPutResponses, PutWebsipApiV1TelephoningWebsipPutErrors, GetPagesApiV1PagesGetData, GetPagesApiV1PagesGetResponses, RevokeOutgoingPeeringRequestApiV1FederationOutgoingRequestDeleteData, RevokeOutgoingPeeringRequestApiV1FederationOutgoingRequestDeleteResponses, RevokeOutgoingPeeringRequestApiV1FederationOutgoingRequestDeleteErrors, CreateOutgoingPeeringRequestApiV1FederationOutgoingRequestPostData, CreateOutgoingPeeringRequestApiV1FederationOutgoingRequestPostResponses, CreateOutgoingPeeringRequestApiV1FederationOutgoingRequestPostErrors, GetOutgoingPeeringRequestsApiV1FederationOutgoingRequestsGetData, GetOutgoingPeeringRequestsApiV1FederationOutgoingRequestsGetResponses, GetIncomingPeeringRequestsApiV1FederationIncomingRequestsGetData, GetIncomingPeeringRequestsApiV1FederationIncomingRequestsGetResponses, RevokeIncomingPeeringRequestApiV1FederationIncomingRequestRequestIdDeleteData, RevokeIncomingPeeringRequestApiV1FederationIncomingRequestRequestIdDeleteResponses, RevokeIncomingPeeringRequestApiV1FederationIncomingRequestRequestIdDeleteErrors, SetIncomingPeeringRequestStatusApiV1FederationIncomingRequestRequestIdPutData, SetIncomingPeeringRequestStatusApiV1FederationIncomingRequestRequestIdPutResponses, SetIncomingPeeringRequestStatusApiV1FederationIncomingRequestRequestIdPutErrors, CreateIncomingPeeringRequestApiV1FederationIncomingRequestPostData, CreateIncomingPeeringRequestApiV1FederationIncomingRequestPostResponses, CreateIncomingPeeringRequestApiV1FederationIncomingRequestPostErrors, SetOutgoingPeeringRequestStatusApiV1FederationOutgoingRequestRequestIdPutData, SetOutgoingPeeringRequestStatusApiV1FederationOutgoingRequestRequestIdPutResponses, SetOutgoingPeeringRequestStatusApiV1FederationOutgoingRequestRequestIdPutErrors, GetPeersApiV1FederationPeersGetData, GetPeersApiV1FederationPeersGetResponses, DeletePeerApiV1FederationPeerPeerIdDeleteData, DeletePeerApiV1FederationPeerPeerIdDeleteResponses, DeletePeerApiV1FederationPeerPeerIdDeleteErrors, TeardownRequestApiV1FederationPeerTeardownPostData, TeardownRequestApiV1FederationPeerTeardownPostResponses, TeardownRequestApiV1FederationPeerTeardownPostErrors, GetPeerPhonebooksApiV1FederationPhonebookGetData, GetPeerPhonebooksApiV1FederationPhonebookGetResponses, GetMediaApiV1MediaGetData, GetMediaApiV1MediaGetResponses, GetMediaApiV1MediaGetErrors, CreateMediaApiV1MediaPostData, CreateMediaApiV1MediaPostResponses, CreateMediaApiV1MediaPostErrors, DeleteMediaApiV1MediaMediaIdDeleteData, DeleteMediaApiV1MediaMediaIdDeleteResponses, DeleteMediaApiV1MediaMediaIdDeleteErrors, UpdateMediaApiV1MediaMediaIdPutData, UpdateMediaApiV1MediaMediaIdPutResponses, UpdateMediaApiV1MediaMediaIdPutErrors, GetMediaContentApiV1MediaByidMediaIdExtGetData, GetMediaContentApiV1MediaByidMediaIdExtGetResponses, GetMediaContentApiV1MediaByidMediaIdExtGetErrors, GetMediaContentApiV1MediaByidMediaIdGetData, GetMediaContentApiV1MediaByidMediaIdGetResponses, GetMediaContentApiV1MediaByidMediaIdGetErrors, GetMediaByNameApiV1MediaByextensionExtensionIdQueryGetData, GetMediaByNameApiV1MediaByextensionExtensionIdQueryGetResponses, GetMediaByNameApiV1MediaByextensionExtensionIdQueryGetErrors, IndexGetData, IndexGetResponses, GetUpdateTelephoningInnovaphoneUpdateGetData, GetUpdateTelephoningInnovaphoneUpdateGetResponses, GetUpdateTelephoningInnovaphoneUpdateGetErrors, GetConfigTelephoningInnovaphoneConfigGetData, GetConfigTelephoningInnovaphoneConfigGetResponses, GetConfigTelephoningInnovaphoneConfigGetErrors, GetServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGetData, GetServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGetResponses, GetSipCredentialsTelephoningIotSecretGetData, GetSipCredentialsTelephoningIotSecretGetResponses, GetSipCredentialsTelephoningIotSecretGetErrors, GetConfigTelephoningSnomSnomMacGetData, GetConfigTelephoningSnomSnomMacGetResponses, GetConfigTelephoningSnomSnomMacGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Login
 */
export const loginApiV1UserLoginPost = <ThrowOnError extends boolean = false>(options: Options<LoginApiV1UserLoginPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoginApiV1UserLoginPostResponses, LoginApiV1UserLoginPostErrors, ThrowOnError>({
        url: '/api/v1/user/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Logout
 */
export const logoutApiV1UserLogoutGet = <ThrowOnError extends boolean = false>(options?: Options<LogoutApiV1UserLogoutGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<LogoutApiV1UserLogoutGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/user/logout',
        ...options
    });
};

/**
 * Delete
 */
export const deleteApiV1UserDelete = <ThrowOnError extends boolean = false>(options?: Options<DeleteApiV1UserDeleteData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteApiV1UserDeleteResponses, DeleteApiV1UserDeleteErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/',
        ...options
    });
};

/**
 * Info
 */
export const infoApiV1UserGet = <ThrowOnError extends boolean = false>(options?: Options<InfoApiV1UserGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<InfoApiV1UserGetResponses, InfoApiV1UserGetErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/',
        ...options
    });
};

/**
 * Update
 */
export const updateApiV1UserPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateApiV1UserPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateApiV1UserPatchResponses, UpdateApiV1UserPatchErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Register
 */
export const registerApiV1UserRegisterPost = <ThrowOnError extends boolean = false>(options: Options<RegisterApiV1UserRegisterPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RegisterApiV1UserRegisterPostResponses, RegisterApiV1UserRegisterPostErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Change Password
 */
export const changePasswordApiV1UserPasswordPatch = <ThrowOnError extends boolean = false>(options: Options<ChangePasswordApiV1UserPasswordPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<ChangePasswordApiV1UserPasswordPatchResponses, ChangePasswordApiV1UserPasswordPatchErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/password',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * All Users
 */
export const allUsersApiV1UserAllGet = <ThrowOnError extends boolean = false>(options?: Options<AllUsersApiV1UserAllGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AllUsersApiV1UserAllGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/all',
        ...options
    });
};

/**
 * Delete Invite
 */
export const deleteInviteApiV1UserInviteDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteInviteApiV1UserInviteDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteInviteApiV1UserInviteDeleteResponses, DeleteInviteApiV1UserInviteDeleteErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/invite',
        ...options
    });
};

/**
 * Get Invites
 */
export const getInvitesApiV1UserInviteGet = <ThrowOnError extends boolean = false>(options?: Options<GetInvitesApiV1UserInviteGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetInvitesApiV1UserInviteGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/invite',
        ...options
    });
};

/**
 * Create Invite
 */
export const createInviteApiV1UserInvitePost = <ThrowOnError extends boolean = false>(options: Options<CreateInviteApiV1UserInvitePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateInviteApiV1UserInvitePostResponses, CreateInviteApiV1UserInvitePostErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/user/invite',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Create
 */
export const createApiV1ExtensionPost = <ThrowOnError extends boolean = false>(options: Options<CreateApiV1ExtensionPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateApiV1ExtensionPostResponses, CreateApiV1ExtensionPostErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete
 */
export const deleteApiV1ExtensionExtensionDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteApiV1ExtensionExtensionDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiV1ExtensionExtensionDeleteResponses, DeleteApiV1ExtensionExtensionDeleteErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/{extension}',
        ...options
    });
};

/**
 * Update
 */
export const updateApiV1ExtensionExtensionPatch = <ThrowOnError extends boolean = false>(options: Options<UpdateApiV1ExtensionExtensionPatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<UpdateApiV1ExtensionExtensionPatchResponses, UpdateApiV1ExtensionExtensionPatchErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/{extension}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get
 */
export const getApiV1ExtensionInfoExtensionGet = <ThrowOnError extends boolean = false>(options: Options<GetApiV1ExtensionInfoExtensionGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiV1ExtensionInfoExtensionGetResponses, GetApiV1ExtensionInfoExtensionGetErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/info/{extension}',
        ...options
    });
};

/**
 * Get Own
 */
export const getOwnApiV1ExtensionOwnGet = <ThrowOnError extends boolean = false>(options?: Options<GetOwnApiV1ExtensionOwnGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetOwnApiV1ExtensionOwnGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/own',
        ...options
    });
};

/**
 * Phonebook
 */
export const phonebookApiV1ExtensionPhonebookGet = <ThrowOnError extends boolean = false>(options?: Options<PhonebookApiV1ExtensionPhonebookGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<PhonebookApiV1ExtensionPhonebookGetResponses, PhonebookApiV1ExtensionPhonebookGetErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/phonebook',
        ...options
    });
};

/**
 * Admin Phonebook
 */
export const adminPhonebookApiV1ExtensionAllGet = <ThrowOnError extends boolean = false>(options?: Options<AdminPhonebookApiV1ExtensionAllGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AdminPhonebookApiV1ExtensionAllGetResponses, AdminPhonebookApiV1ExtensionAllGetErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/all',
        ...options
    });
};

/**
 * Get Extensions Online
 */
export const getExtensionsOnlineApiV1ExtensionOnlineGet = <ThrowOnError extends boolean = false>(options?: Options<GetExtensionsOnlineApiV1ExtensionOnlineGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetExtensionsOnlineApiV1ExtensionOnlineGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/online',
        ...options
    });
};

/**
 * Is Extension Online
 */
export const isExtensionOnlineApiV1ExtensionIsOnlineExtensionGet = <ThrowOnError extends boolean = false>(options: Options<IsExtensionOnlineApiV1ExtensionIsOnlineExtensionGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<IsExtensionOnlineApiV1ExtensionIsOnlineExtensionGetResponses, IsExtensionOnlineApiV1ExtensionIsOnlineExtensionGetErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/is_online/{extension}',
        ...options
    });
};

/**
 * Get Extension Contact
 */
export const getExtensionContactApiV1ExtensionContactExtensionGet = <ThrowOnError extends boolean = false>(options: Options<GetExtensionContactApiV1ExtensionContactExtensionGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExtensionContactApiV1ExtensionContactExtensionGetResponses, GetExtensionContactApiV1ExtensionContactExtensionGetErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/extension/contact/{extension}',
        ...options
    });
};

/**
 * Get Settings
 */
export const getSettingsApiV1SettingsGet = <ThrowOnError extends boolean = false>(options?: Options<GetSettingsApiV1SettingsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSettingsApiV1SettingsGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/settings/',
        ...options
    });
};

/**
 * Get Phone Types
 */
export const getPhoneTypesApiV1TelephoningTypesGet = <ThrowOnError extends boolean = false>(options?: Options<GetPhoneTypesApiV1TelephoningTypesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPhoneTypesApiV1TelephoningTypesGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/telephoning/types',
        ...options
    });
};

/**
 * Delete Websip
 */
export const deleteWebsipApiV1TelephoningWebsipDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteWebsipApiV1TelephoningWebsipDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteWebsipApiV1TelephoningWebsipDeleteResponses, DeleteWebsipApiV1TelephoningWebsipDeleteErrors, ThrowOnError>({
        url: '/api/v1/telephoning/websip',
        ...options
    });
};

/**
 * Create Websip
 */
export const createWebsipApiV1TelephoningWebsipGet = <ThrowOnError extends boolean = false>(options?: Options<CreateWebsipApiV1TelephoningWebsipGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<CreateWebsipApiV1TelephoningWebsipGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/telephoning/websip',
        ...options
    });
};

/**
 * Put Websip
 */
export const putWebsipApiV1TelephoningWebsipPut = <ThrowOnError extends boolean = false>(options: Options<PutWebsipApiV1TelephoningWebsipPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWebsipApiV1TelephoningWebsipPutResponses, PutWebsipApiV1TelephoningWebsipPutErrors, ThrowOnError>({
        url: '/api/v1/telephoning/websip',
        ...options
    });
};

/**
 * Get Pages
 */
export const getPagesApiV1PagesGet = <ThrowOnError extends boolean = false>(options?: Options<GetPagesApiV1PagesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPagesApiV1PagesGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/pages/',
        ...options
    });
};

/**
 * Revoke Outgoing Peering Request
 */
export const revokeOutgoingPeeringRequestApiV1FederationOutgoingRequestDelete = <ThrowOnError extends boolean = false>(options: Options<RevokeOutgoingPeeringRequestApiV1FederationOutgoingRequestDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<RevokeOutgoingPeeringRequestApiV1FederationOutgoingRequestDeleteResponses, RevokeOutgoingPeeringRequestApiV1FederationOutgoingRequestDeleteErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/federation/outgoing/request',
        ...options
    });
};

/**
 * Create Outgoing Peering Request
 */
export const createOutgoingPeeringRequestApiV1FederationOutgoingRequestPost = <ThrowOnError extends boolean = false>(options: Options<CreateOutgoingPeeringRequestApiV1FederationOutgoingRequestPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateOutgoingPeeringRequestApiV1FederationOutgoingRequestPostResponses, CreateOutgoingPeeringRequestApiV1FederationOutgoingRequestPostErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/federation/outgoing/request',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Outgoing Peering Requests
 */
export const getOutgoingPeeringRequestsApiV1FederationOutgoingRequestsGet = <ThrowOnError extends boolean = false>(options?: Options<GetOutgoingPeeringRequestsApiV1FederationOutgoingRequestsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetOutgoingPeeringRequestsApiV1FederationOutgoingRequestsGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/federation/outgoing/requests',
        ...options
    });
};

/**
 * Get Incoming Peering Requests
 */
export const getIncomingPeeringRequestsApiV1FederationIncomingRequestsGet = <ThrowOnError extends boolean = false>(options?: Options<GetIncomingPeeringRequestsApiV1FederationIncomingRequestsGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetIncomingPeeringRequestsApiV1FederationIncomingRequestsGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/federation/incoming/requests',
        ...options
    });
};

/**
 * Revoke Incoming Peering Request
 */
export const revokeIncomingPeeringRequestApiV1FederationIncomingRequestRequestIdDelete = <ThrowOnError extends boolean = false>(options: Options<RevokeIncomingPeeringRequestApiV1FederationIncomingRequestRequestIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<RevokeIncomingPeeringRequestApiV1FederationIncomingRequestRequestIdDeleteResponses, RevokeIncomingPeeringRequestApiV1FederationIncomingRequestRequestIdDeleteErrors, ThrowOnError>({
        url: '/api/v1/federation/incoming/request/{request_id}',
        ...options
    });
};

/**
 * Set Incoming Peering Request Status
 */
export const setIncomingPeeringRequestStatusApiV1FederationIncomingRequestRequestIdPut = <ThrowOnError extends boolean = false>(options: Options<SetIncomingPeeringRequestStatusApiV1FederationIncomingRequestRequestIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<SetIncomingPeeringRequestStatusApiV1FederationIncomingRequestRequestIdPutResponses, SetIncomingPeeringRequestStatusApiV1FederationIncomingRequestRequestIdPutErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/federation/incoming/request/{request_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Create Incoming Peering Request
 */
export const createIncomingPeeringRequestApiV1FederationIncomingRequestPost = <ThrowOnError extends boolean = false>(options: Options<CreateIncomingPeeringRequestApiV1FederationIncomingRequestPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateIncomingPeeringRequestApiV1FederationIncomingRequestPostResponses, CreateIncomingPeeringRequestApiV1FederationIncomingRequestPostErrors, ThrowOnError>({
        url: '/api/v1/federation/incoming/request',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Set Outgoing Peering Request Status
 */
export const setOutgoingPeeringRequestStatusApiV1FederationOutgoingRequestRequestIdPut = <ThrowOnError extends boolean = false>(options: Options<SetOutgoingPeeringRequestStatusApiV1FederationOutgoingRequestRequestIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<SetOutgoingPeeringRequestStatusApiV1FederationOutgoingRequestRequestIdPutResponses, SetOutgoingPeeringRequestStatusApiV1FederationOutgoingRequestRequestIdPutErrors, ThrowOnError>({
        url: '/api/v1/federation/outgoing/request/{request_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Peers
 */
export const getPeersApiV1FederationPeersGet = <ThrowOnError extends boolean = false>(options?: Options<GetPeersApiV1FederationPeersGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPeersApiV1FederationPeersGetResponses, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/federation/peers',
        ...options
    });
};

/**
 * Delete Peer
 */
export const deletePeerApiV1FederationPeerPeerIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeletePeerApiV1FederationPeerPeerIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeletePeerApiV1FederationPeerPeerIdDeleteResponses, DeletePeerApiV1FederationPeerPeerIdDeleteErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/federation/peer/{peer_id}',
        ...options
    });
};

/**
 * Teardown Request
 */
export const teardownRequestApiV1FederationPeerTeardownPost = <ThrowOnError extends boolean = false>(options: Options<TeardownRequestApiV1FederationPeerTeardownPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<TeardownRequestApiV1FederationPeerTeardownPostResponses, TeardownRequestApiV1FederationPeerTeardownPostErrors, ThrowOnError>({
        url: '/api/v1/federation/peer/teardown',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Peer Phonebooks
 */
export const getPeerPhonebooksApiV1FederationPhonebookGet = <ThrowOnError extends boolean = false>(options?: Options<GetPeerPhonebooksApiV1FederationPhonebookGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPeerPhonebooksApiV1FederationPhonebookGetResponses, unknown, ThrowOnError>({
        url: '/api/v1/federation/phonebook',
        ...options
    });
};

/**
 * Get Media
 */
export const getMediaApiV1MediaGet = <ThrowOnError extends boolean = false>(options?: Options<GetMediaApiV1MediaGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMediaApiV1MediaGetResponses, GetMediaApiV1MediaGetErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/media/',
        ...options
    });
};

/**
 * Create Media
 */
export const createMediaApiV1MediaPost = <ThrowOnError extends boolean = false>(options: Options<CreateMediaApiV1MediaPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateMediaApiV1MediaPostResponses, CreateMediaApiV1MediaPostErrors, ThrowOnError>({
        ...formDataBodySerializer,
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/media/',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Delete Media
 */
export const deleteMediaApiV1MediaMediaIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteMediaApiV1MediaMediaIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMediaApiV1MediaMediaIdDeleteResponses, DeleteMediaApiV1MediaMediaIdDeleteErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/media/{media_id}',
        ...options
    });
};

/**
 * Update Media
 */
export const updateMediaApiV1MediaMediaIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateMediaApiV1MediaMediaIdPutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateMediaApiV1MediaMediaIdPutResponses, UpdateMediaApiV1MediaMediaIdPutErrors, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'auth',
                type: 'apiKey'
            }
        ],
        url: '/api/v1/media/{media_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Media Content
 */
export const getMediaContentApiV1MediaByidMediaIdExtGet = <ThrowOnError extends boolean = false>(options: Options<GetMediaContentApiV1MediaByidMediaIdExtGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMediaContentApiV1MediaByidMediaIdExtGetResponses, GetMediaContentApiV1MediaByidMediaIdExtGetErrors, ThrowOnError>({
        url: '/api/v1/media/byid/{media_id}.{ext}',
        ...options
    });
};

/**
 * Get Media Content
 */
export const getMediaContentApiV1MediaByidMediaIdGet = <ThrowOnError extends boolean = false>(options: Options<GetMediaContentApiV1MediaByidMediaIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMediaContentApiV1MediaByidMediaIdGetResponses, GetMediaContentApiV1MediaByidMediaIdGetErrors, ThrowOnError>({
        url: '/api/v1/media/byid/{media_id}',
        ...options
    });
};

/**
 * Get Media By Name
 */
export const getMediaByNameApiV1MediaByextensionExtensionIdQueryGet = <ThrowOnError extends boolean = false>(options: Options<GetMediaByNameApiV1MediaByextensionExtensionIdQueryGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMediaByNameApiV1MediaByextensionExtensionIdQueryGetResponses, GetMediaByNameApiV1MediaByextensionExtensionIdQueryGetErrors, ThrowOnError>({
        url: '/api/v1/media/byextension/{extension_id}/{query}',
        ...options
    });
};

/**
 * Index
 */
export const indexGet = <ThrowOnError extends boolean = false>(options?: Options<IndexGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<IndexGetResponses, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

/**
 * Get Update
 */
export const getUpdateTelephoningInnovaphoneUpdateGet = <ThrowOnError extends boolean = false>(options: Options<GetUpdateTelephoningInnovaphoneUpdateGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUpdateTelephoningInnovaphoneUpdateGetResponses, GetUpdateTelephoningInnovaphoneUpdateGetErrors, ThrowOnError>({
        url: '/telephoning/innovaphone/update',
        ...options
    });
};

/**
 * Get Config
 */
export const getConfigTelephoningInnovaphoneConfigGet = <ThrowOnError extends boolean = false>(options: Options<GetConfigTelephoningInnovaphoneConfigGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConfigTelephoningInnovaphoneConfigGetResponses, GetConfigTelephoningInnovaphoneConfigGetErrors, ThrowOnError>({
        url: '/telephoning/innovaphone/config',
        ...options
    });
};

/**
 * Get Service Discovery
 */
export const getServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGet = <ThrowOnError extends boolean = false>(options?: Options<GetServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGetResponses, unknown, ThrowOnError>({
        url: '/telephoning/innovaphone/service-discovery',
        ...options
    });
};

/**
 * Get Sip Credentials
 */
export const getSipCredentialsTelephoningIotSecretGet = <ThrowOnError extends boolean = false>(options: Options<GetSipCredentialsTelephoningIotSecretGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSipCredentialsTelephoningIotSecretGetResponses, GetSipCredentialsTelephoningIotSecretGetErrors, ThrowOnError>({
        url: '/telephoning/iot/{secret}',
        ...options
    });
};

/**
 * Get Config
 */
export const getConfigTelephoningSnomSnomMacGet = <ThrowOnError extends boolean = false>(options: Options<GetConfigTelephoningSnomSnomMacGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetConfigTelephoningSnomSnomMacGetResponses, GetConfigTelephoningSnomSnomMacGetErrors, ThrowOnError>({
        url: '/telephoning/snom/snom-{mac}',
        ...options
    });
};