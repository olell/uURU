// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type {
	LoginApiV1UserLoginPostData,
	LoginApiV1UserLoginPostResponses,
	LoginApiV1UserLoginPostErrors,
	LogoutApiV1UserLogoutGetData,
	LogoutApiV1UserLogoutGetResponses,
	DeleteApiV1UserDeleteData,
	DeleteApiV1UserDeleteResponses,
	DeleteApiV1UserDeleteErrors,
	InfoApiV1UserGetData,
	InfoApiV1UserGetResponses,
	InfoApiV1UserGetErrors,
	UpdateApiV1UserPatchData,
	UpdateApiV1UserPatchResponses,
	UpdateApiV1UserPatchErrors,
	RegisterApiV1UserRegisterPostData,
	RegisterApiV1UserRegisterPostResponses,
	RegisterApiV1UserRegisterPostErrors,
	ChangePasswordApiV1UserPasswordPatchData,
	ChangePasswordApiV1UserPasswordPatchResponses,
	ChangePasswordApiV1UserPasswordPatchErrors,
	AllUsersApiV1UserAllGetData,
	AllUsersApiV1UserAllGetResponses,
	CreateApiV1ExtensionPostData,
	CreateApiV1ExtensionPostResponses,
	CreateApiV1ExtensionPostErrors,
	DeleteApiV1ExtensionExtensionDeleteData,
	DeleteApiV1ExtensionExtensionDeleteResponses,
	DeleteApiV1ExtensionExtensionDeleteErrors,
	UpdateApiV1ExtensionExtensionPatchData,
	UpdateApiV1ExtensionExtensionPatchResponses,
	UpdateApiV1ExtensionExtensionPatchErrors,
	GetApiV1ExtensionInfoExtensionGetData,
	GetApiV1ExtensionInfoExtensionGetResponses,
	GetApiV1ExtensionInfoExtensionGetErrors,
	GetOwnApiV1ExtensionOwnGetData,
	GetOwnApiV1ExtensionOwnGetResponses,
	PhonebookApiV1ExtensionPhonebookGetData,
	PhonebookApiV1ExtensionPhonebookGetResponses,
	PhonebookApiV1ExtensionPhonebookGetErrors,
	AdminPhonebookApiV1ExtensionAllGetData,
	AdminPhonebookApiV1ExtensionAllGetResponses,
	AdminPhonebookApiV1ExtensionAllGetErrors,
	GetSettingsApiV1SettingsGetData,
	GetSettingsApiV1SettingsGetResponses,
	GetPhoneTypesApiV1TelephoningTypesGetData,
	GetPhoneTypesApiV1TelephoningTypesGetResponses,
	GetPagesApiV1PagesGetData,
	GetPagesApiV1PagesGetResponses,
	IndexGetData,
	IndexGetResponses,
	GetUpdateTelephoningInnovaphoneUpdateGetData,
	GetUpdateTelephoningInnovaphoneUpdateGetResponses,
	GetUpdateTelephoningInnovaphoneUpdateGetErrors,
	GetConfigTelephoningInnovaphoneConfigGetData,
	GetConfigTelephoningInnovaphoneConfigGetResponses,
	GetConfigTelephoningInnovaphoneConfigGetErrors,
	GetServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGetData,
	GetServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGetResponses,
	GetSipCredentialsTelephoningIotSecretGetData,
	GetSipCredentialsTelephoningIotSecretGetResponses,
	GetSipCredentialsTelephoningIotSecretGetErrors,
	GetConfigTelephoningSnomSnomMacGetData,
	GetConfigTelephoningSnomSnomMacGetResponses,
	GetConfigTelephoningSnomSnomMacGetErrors
} from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<
	TData extends TDataShape = TDataShape,
	ThrowOnError extends boolean = boolean
> = ClientOptions<TData, ThrowOnError> & {
	/**
	 * You can provide a client instance returned by `createClient()` instead of
	 * individual options. This might be also useful if you want to implement a
	 * custom client.
	 */
	client?: Client;
	/**
	 * You can pass arbitrary values through the `meta` object. This can be
	 * used to access values that aren't defined as part of the SDK function.
	 */
	meta?: Record<string, unknown>;
};

/**
 * Login
 */
export const loginApiV1UserLoginPost = <ThrowOnError extends boolean = false>(
	options: Options<LoginApiV1UserLoginPostData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).post<
		LoginApiV1UserLoginPostResponses,
		LoginApiV1UserLoginPostErrors,
		ThrowOnError
	>({
		url: '/api/v1/user/login',
		...options,
		headers: {
			'Content-Type': 'application/json',
			...options.headers
		}
	});
};

/**
 * Logout
 */
export const logoutApiV1UserLogoutGet = <ThrowOnError extends boolean = false>(
	options?: Options<LogoutApiV1UserLogoutGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		LogoutApiV1UserLogoutGetResponses,
		unknown,
		ThrowOnError
	>({
		url: '/api/v1/user/logout',
		...options
	});
};

/**
 * Delete
 */
export const deleteApiV1UserDelete = <ThrowOnError extends boolean = false>(
	options?: Options<DeleteApiV1UserDeleteData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).delete<
		DeleteApiV1UserDeleteResponses,
		DeleteApiV1UserDeleteErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/',
		...options
	});
};

/**
 * Info
 */
export const infoApiV1UserGet = <ThrowOnError extends boolean = false>(
	options?: Options<InfoApiV1UserGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		InfoApiV1UserGetResponses,
		InfoApiV1UserGetErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/',
		...options
	});
};

/**
 * Update
 */
export const updateApiV1UserPatch = <ThrowOnError extends boolean = false>(
	options: Options<UpdateApiV1UserPatchData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).patch<
		UpdateApiV1UserPatchResponses,
		UpdateApiV1UserPatchErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/',
		...options,
		headers: {
			'Content-Type': 'application/json',
			...options.headers
		}
	});
};

/**
 * Register
 */
export const registerApiV1UserRegisterPost = <ThrowOnError extends boolean = false>(
	options: Options<RegisterApiV1UserRegisterPostData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).post<
		RegisterApiV1UserRegisterPostResponses,
		RegisterApiV1UserRegisterPostErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/register',
		...options,
		headers: {
			'Content-Type': 'application/json',
			...options.headers
		}
	});
};

/**
 * Change Password
 */
export const changePasswordApiV1UserPasswordPatch = <ThrowOnError extends boolean = false>(
	options: Options<ChangePasswordApiV1UserPasswordPatchData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).patch<
		ChangePasswordApiV1UserPasswordPatchResponses,
		ChangePasswordApiV1UserPasswordPatchErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/password',
		...options,
		headers: {
			'Content-Type': 'application/json',
			...options.headers
		}
	});
};

/**
 * All Users
 */
export const allUsersApiV1UserAllGet = <ThrowOnError extends boolean = false>(
	options?: Options<AllUsersApiV1UserAllGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		AllUsersApiV1UserAllGetResponses,
		unknown,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/all',
		...options
	});
};

/**
 * Delete Invite
 */
export const deleteInviteApiV1UserInviteDelete = <ThrowOnError extends boolean = false>(
	options: Options<DeleteInviteApiV1UserInviteDeleteData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).delete<
		DeleteInviteApiV1UserInviteDeleteResponses,
		DeleteInviteApiV1UserInviteDeleteErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/invite',
		...options
	});
};

/**
 * Get Invites
 */
export const getInvitesApiV1UserInviteGet = <ThrowOnError extends boolean = false>(
	options?: Options<GetInvitesApiV1UserInviteGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		GetInvitesApiV1UserInviteGetResponses,
		unknown,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/invite',
		...options
	});
};

/**
 * Create Invite
 */
export const createInviteApiV1UserInvitePost = <ThrowOnError extends boolean = false>(
	options: Options<CreateInviteApiV1UserInvitePostData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).post<
		CreateInviteApiV1UserInvitePostResponses,
		CreateInviteApiV1UserInvitePostErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/user/invite',
		...options,
		headers: {
			'Content-Type': 'application/json',
			...options.headers
		}
	});
};

/**
 * Create
 */
export const createApiV1ExtensionPost = <ThrowOnError extends boolean = false>(
	options: Options<CreateApiV1ExtensionPostData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).post<
		CreateApiV1ExtensionPostResponses,
		CreateApiV1ExtensionPostErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/extension/',
		...options,
		headers: {
			'Content-Type': 'application/json',
			...options.headers
		}
	});
};

/**
 * Delete
 */
export const deleteApiV1ExtensionExtensionDelete = <ThrowOnError extends boolean = false>(
	options: Options<DeleteApiV1ExtensionExtensionDeleteData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).delete<
		DeleteApiV1ExtensionExtensionDeleteResponses,
		DeleteApiV1ExtensionExtensionDeleteErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/extension/{extension}',
		...options
	});
};

/**
 * Update
 */
export const updateApiV1ExtensionExtensionPatch = <ThrowOnError extends boolean = false>(
	options: Options<UpdateApiV1ExtensionExtensionPatchData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).patch<
		UpdateApiV1ExtensionExtensionPatchResponses,
		UpdateApiV1ExtensionExtensionPatchErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/extension/{extension}',
		...options,
		headers: {
			'Content-Type': 'application/json',
			...options.headers
		}
	});
};

/**
 * Get
 */
export const getApiV1ExtensionInfoExtensionGet = <ThrowOnError extends boolean = false>(
	options: Options<GetApiV1ExtensionInfoExtensionGetData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).get<
		GetApiV1ExtensionInfoExtensionGetResponses,
		GetApiV1ExtensionInfoExtensionGetErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/extension/info/{extension}',
		...options
	});
};

/**
 * Get Own
 */
export const getOwnApiV1ExtensionOwnGet = <ThrowOnError extends boolean = false>(
	options?: Options<GetOwnApiV1ExtensionOwnGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		GetOwnApiV1ExtensionOwnGetResponses,
		unknown,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/extension/own',
		...options
	});
};

/**
 * Phonebook
 */
export const phonebookApiV1ExtensionPhonebookGet = <ThrowOnError extends boolean = false>(
	options?: Options<PhonebookApiV1ExtensionPhonebookGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		PhonebookApiV1ExtensionPhonebookGetResponses,
		PhonebookApiV1ExtensionPhonebookGetErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/extension/phonebook',
		...options
	});
};

/**
 * Admin Phonebook
 */
export const adminPhonebookApiV1ExtensionAllGet = <ThrowOnError extends boolean = false>(
	options?: Options<AdminPhonebookApiV1ExtensionAllGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		AdminPhonebookApiV1ExtensionAllGetResponses,
		AdminPhonebookApiV1ExtensionAllGetErrors,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/extension/all',
		...options
	});
};

/**
 * Get Settings
 */
export const getSettingsApiV1SettingsGet = <ThrowOnError extends boolean = false>(
	options?: Options<GetSettingsApiV1SettingsGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		GetSettingsApiV1SettingsGetResponses,
		unknown,
		ThrowOnError
	>({
		url: '/api/v1/settings/',
		...options
	});
};

/**
 * Get Phone Types
 */
export const getPhoneTypesApiV1TelephoningTypesGet = <ThrowOnError extends boolean = false>(
	options?: Options<GetPhoneTypesApiV1TelephoningTypesGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		GetPhoneTypesApiV1TelephoningTypesGetResponses,
		unknown,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/telephoning/types',
		...options
	});
};

/**
 * Delete Websip
 */
export const deleteWebsipApiV1TelephoningWebsipDelete = <ThrowOnError extends boolean = false>(
	options: Options<DeleteWebsipApiV1TelephoningWebsipDeleteData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).delete<
		DeleteWebsipApiV1TelephoningWebsipDeleteResponses,
		DeleteWebsipApiV1TelephoningWebsipDeleteErrors,
		ThrowOnError
	>({
		url: '/api/v1/telephoning/websip',
		...options
	});
};

/**
 * Create Websip
 */
export const createWebsipApiV1TelephoningWebsipGet = <ThrowOnError extends boolean = false>(
	options?: Options<CreateWebsipApiV1TelephoningWebsipGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		CreateWebsipApiV1TelephoningWebsipGetResponses,
		unknown,
		ThrowOnError
	>({
		security: [
			{
				in: 'cookie',
				name: 'auth',
				type: 'apiKey'
			}
		],
		url: '/api/v1/telephoning/websip',
		...options
	});
};

/**
 * Get Pages
 */
export const getPagesApiV1PagesGet = <ThrowOnError extends boolean = false>(
	options?: Options<GetPagesApiV1PagesGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		GetPagesApiV1PagesGetResponses,
		unknown,
		ThrowOnError
	>({
		url: '/api/v1/pages/',
		...options
	});
};

/**
 * Index
 */
export const indexGet = <ThrowOnError extends boolean = false>(
	options?: Options<IndexGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<IndexGetResponses, unknown, ThrowOnError>({
		url: '/',
		...options
	});
};

/**
 * Get Update
 */
export const getUpdateTelephoningInnovaphoneUpdateGet = <ThrowOnError extends boolean = false>(
	options: Options<GetUpdateTelephoningInnovaphoneUpdateGetData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).get<
		GetUpdateTelephoningInnovaphoneUpdateGetResponses,
		GetUpdateTelephoningInnovaphoneUpdateGetErrors,
		ThrowOnError
	>({
		url: '/telephoning/innovaphone/update',
		...options
	});
};

/**
 * Get Config
 */
export const getConfigTelephoningInnovaphoneConfigGet = <ThrowOnError extends boolean = false>(
	options: Options<GetConfigTelephoningInnovaphoneConfigGetData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).get<
		GetConfigTelephoningInnovaphoneConfigGetResponses,
		GetConfigTelephoningInnovaphoneConfigGetErrors,
		ThrowOnError
	>({
		url: '/telephoning/innovaphone/config',
		...options
	});
};

/**
 * Get Service Discovery
 */
export const getServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGet = <
	ThrowOnError extends boolean = false
>(
	options?: Options<GetServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGetData, ThrowOnError>
) => {
	return (options?.client ?? _heyApiClient).get<
		GetServiceDiscoveryTelephoningInnovaphoneServiceDiscoveryGetResponses,
		unknown,
		ThrowOnError
	>({
		url: '/telephoning/innovaphone/service-discovery',
		...options
	});
};

/**
 * Get Sip Credentials
 */
export const getSipCredentialsTelephoningIotSecretGet = <ThrowOnError extends boolean = false>(
	options: Options<GetSipCredentialsTelephoningIotSecretGetData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).get<
		GetSipCredentialsTelephoningIotSecretGetResponses,
		GetSipCredentialsTelephoningIotSecretGetErrors,
		ThrowOnError
	>({
		url: '/telephoning/iot/{secret}',
		...options
	});
};

/**
 * Get Config
 */
export const getConfigTelephoningSnomSnomMacGet = <ThrowOnError extends boolean = false>(
	options: Options<GetConfigTelephoningSnomSnomMacGetData, ThrowOnError>
) => {
	return (options.client ?? _heyApiClient).get<
		GetConfigTelephoningSnomSnomMacGetResponses,
		GetConfigTelephoningSnomSnomMacGetErrors,
		ThrowOnError
	>({
		url: '/telephoning/snom/snom-{mac}',
		...options
	});
};
