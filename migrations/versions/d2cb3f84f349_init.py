"""init

Revision ID: d2cb3f84f349
Revises: 
Create Date: 2025-10-08 19:54:25.337979

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'd2cb3f84f349'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('extensions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('context', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exten', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('app', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('appdata', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incomingpeeringrequest',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('partner_uuru_host', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('partner_iax_host', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('partner_extension_length', sa.Integer(), nullable=False),
    sa.Column('secret', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invite',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('invite', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('variant', sa.Enum('COUNT', 'TIME', 'TIME_AND_COUNT', name='invitevariant'), nullable=False),
    sa.Column('use_count', sa.Integer(), nullable=True),
    sa.Column('max_uses', sa.Integer(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outgoingpeeringrequest',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('partner_uuru_host', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('prefix', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('secret', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('peer',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('prefix', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('partner_extension_length', sa.Integer(), nullable=False),
    sa.Column('partner_iax_host', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('partner_uuru_host', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('secret', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temporaryextensions',
    sa.Column('extension', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('ppn', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('extension'),
    sa.UniqueConstraint('extension')
    )
    op.create_table('user',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='userrole'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('extension',
    sa.Column('extension', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lat', sa.Integer(), nullable=True),
    sa.Column('lon', sa.Integer(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('info', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('extra_fields', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('extension'),
    sa.UniqueConstraint('extension')
    )
    op.create_table('media',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('IMAGE', 'AUDIO', 'RAW', name='mediatype'), nullable=False),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('stored_as', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extensionmedia',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('media_id', sa.Uuid(), nullable=True),
    sa.Column('extension_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['extension_id'], ['extension.extension'], ),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('extensionmedia')
    op.drop_table('media')
    op.drop_table('extension')
    op.drop_table('user')
    op.drop_table('temporaryextensions')
    op.drop_table('peer')
    op.drop_table('outgoingpeeringrequest')
    op.drop_table('invite')
    op.drop_table('incomingpeeringrequest')
    op.drop_table('extensions')
    # ### end Alembic commands ###
